# SPDX-License-Identifier: Apache-2.0
# SPDX-FileCopyrightText: Huawei Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

variables:
  BITBAKE_CONTAINER_VERSION: "0.8"
  OPENHARMONY_CONTAINER_VERSION: "0.1"

.kaniko:
  stage: container
  rules:
    - if: $CI_REGISTRY && $CI_REGISTRY_USER && $CI_REGISTRY_PASSWORD && $CI_REGISTRY_IMAGE
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  variables:
    CONTAINER_DOCKERFILE: Dockerfile
  script:
    - if [ -z "$CONTAINER_PATH" ] ; then
        CONTAINER_PATH="$CONTAINER_NAME" ;
      fi
    - CONTEXT="$CI_PROJECT_DIR/.gitlab-ci/container/$CONTAINER_PATH"
    - DOCKERFILE="$CONTEXT/$CONTAINER_DOCKERFILE"
    - if [ -n "$CONTAINER_FROM" ] ; then
        sed -e "s|^FROM .*|FROM $CI_REGISTRY_IMAGE/$CONTAINER_FROM:$CONTAINER_VERSION|"
          -i "$DOCKERFILE" ;
      fi
    - mkdir -p /kaniko/.docker
    - printf '{"auths":{"%s":{"auth":"%s"}}}\n' "$CI_REGISTRY" "$(printf '%s:%s' "$CI_REGISTRY_USER" "$CI_REGISTRY_PASSWORD" | base64)" > /kaniko/.docker/config.json
    - BUILD_DATE="$(date '+%FT%T%z' | sed -E -n 's/(\+[0-9]{2})([0-9]{2})$/\1:\2/p')" #rfc 3339 date
    - BUILD_TITLE=$(echo "$CI_PROJECT_TITLE" | tr " " "_")
    - IMAGE_LABELS="--label build-date=$BUILD_DATE
          --label com.gitlab.ci.cijoburl=$CI_JOB_URL
          --label com.gitlab.ci.commiturl=$CI_PROJECT_URL/commit/$CI_COMMIT_SHA
          --label com.gitlab.ci.email=$GITLAB_USER_EMAIL
          --label com.gitlab.ci.mrurl=$CI_PROJECT_URL/-/merge_requests/$CI_MERGE_REQUEST_ID
          --label com.gitlab.ci.pipelineurl=$CI_PIPELINE_URL
          --label com.gitlab.ci.tagorbranch=$CI_COMMIT_REF_NAME
          --label com.gitlab.ci.user=$CI_SERVER_URL/$GITLAB_USER_LOGIN
          --label org.opencontainers.image.authors=$CI_SERVER_URL/$GITLAB_USER_LOGIN
          --label org.opencontainers.image.created=$BUILD_DATE
          --label org.opencontainers.image.description=$BUILD_TITLE
          --label org.opencontainers.image.documentation=$CI_PROJECT_URL
          --label org.opencontainers.image.licenses=$CI_PROJECT_URL
          --label org.opencontainers.image.ref.name=$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
          --label org.opencontainers.image.revision=$CI_COMMIT_SHA
          --label org.opencontainers.image.source=$CI_PROJECT_URL
          --label org.opencontainers.image.title=$BUILD_TITLE
          --label org.opencontainers.image.url=$CI_PROJECT_URL
          --label org.opencontainers.image.vendor=$CI_SERVER_URL/$GITLAB_USER_LOGIN
          --label org.opencontainers.image.version=$CI_COMMIT_TAG
          --label vcs-url=$CI_PROJECT_URL"
    - echo "Building and shipping image to $CI_REGISTRY_IMAGE"
    - exec /kaniko/executor --cache=true
        --context "$CONTEXT" --dockerfile "$DOCKERFILE"
        --destination "$CI_REGISTRY_IMAGE/$CONTAINER_NAME:$CONTAINER_VERSION"

bitbake-builder:
  extends: .kaniko
  variables:
    CONTAINER_NAME: bitbake-builder
    CONTAINER_VERSION: $BITBAKE_CONTAINER_VERSION

bitbake-toolbox:
  extends: .kaniko
  variables:
    CONTAINER_NAME: bitbake-toolbox
    CONTAINER_VERSION: $BITBAKE_CONTAINER_VERSION
    CONTAINER_PATH: bitbake-builder
    CONTAINER_DOCKERFILE: Dockerfile.toolbox
    CONTAINER_FROM: bitbake-builder
  needs:
    - job: bitbake-builder
      artifacts: false

openharmony-builder:
  extends: .kaniko
  variables:
    CONTAINER_NAME: openharmony-builder
    CONTAINER_VERSION: $OPENHARMONY_CONTAINER_VERSION

openharmony-toolbox:
  extends: .kaniko
  variables:
    CONTAINER_NAME: openharmony-toolbox
    CONTAINER_VERSION: $OPENHARMONY_CONTAINER_VERSION
    CONTAINER_PATH: openharmony-builder
    CONTAINER_DOCKERFILE: Dockerfile.toolbox
    CONTAINER_FROM: openharmony-builder
  needs:
    - job: openharmony-builder
      artifacts: false
